a:2:{s:4:"meta";a:3:{s:5:"title";s:16:"datamints_feuser";s:5:"descr";s:40:"A extension for frontend user mangement.";s:7:"options";a:2:{s:10:"usageCount";s:1:"1";s:19:"includeCodeAbstract";s:1:"1";}}s:5:"files";a:4:{s:14:"MD5_bdff62bd93";a:5:{s:8:"filename";s:41:"lib/class.tx_datamintsfeuser_flexform.php";s:8:"filesize";i:2308;s:6:"header";a:5:{s:4:"text";s:86:"

Class 'tx_datamintsfeuser_flexform' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:2:{i:1;a:5:{s:6:"header";s:35:"class tx_datamintsfeuser_flexform {";s:5:"class";i:1;s:11:"parentClass";s:27:"tx_datamintsfeuser_flexform";s:4:"cDat";a:5:{s:4:"text";s:86:"

Class 'tx_datamintsfeuser_flexform' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:6:"atLine";i:44;}i:3;a:7:{s:6:"header";s:33:"function getFieldNames($config) {";s:11:"parentClass";s:27:"tx_datamintsfeuser_flexform";s:4:"cDat";a:3:{s:4:"text";s:98:"

The getFields method is used to get the "fe_users" field names into the flexform of the plugin.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:29:"$config: The fields selected.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:7:"content";a:2:{i:0;s:507:"		// Damit $TCA hier zur Verfuegung steht.
		global $TCA;

		// $TCA-Teil laden. Damit koennen wir alle Felder durchgehen.
		t3lib_div::loadTCA('fe_users');

		$fieldList = array();

		foreach ($TCA['fe_users']['columns'] as $key => $value){
			$fieldList[] = array($key, $key);
		}

		$config['items'] = array_merge($config['items'], $fieldList);

		return $config;
	}

}

i
[...]
include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_flexform.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:637;s:13:"content_lines";i:23;s:6:"atLine";i:52;}}s:10:"usageCount";a:2:{s:12:"H_bc78dc17ad";a:2:{s:24:"_searchtime_milliseconds";d:17;s:15:"_functionHeader";s:35:"class tx_datamintsfeuser_flexform {";}s:12:"H_f8248cbb61";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function getFieldNames($config) {";}}}s:14:"MD5_d945c5944b";a:5:{s:8:"filename";s:43:"lib/class.tx_datamintsfeuser_salesforce.php";s:8:"filesize";i:2901;s:6:"header";a:5:{s:4:"text";s:61:"

Library 'Salesforce' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:2:{i:1;a:5:{s:6:"header";s:37:"class tx_datamintsfeuser_salesforce {";s:5:"class";i:1;s:11:"parentClass";s:29:"tx_datamintsfeuser_salesforce";s:4:"cDat";a:5:{s:4:"text";s:61:"

Library 'Salesforce' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:6:"atLine";i:44;}i:3;a:7:{s:6:"header";s:31:"function main($params, $pObj) {";s:11:"parentClass";s:29:"tx_datamintsfeuser_salesforce";s:4:"cDat";a:3:{s:4:"text";s:136:"

Maps the typo3 fields to the salesforce fields and submits it to salesforce.
This will only done if the user is completely activated!
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:7:"$params";}i:1;a:2:{i:0;s:6:"object";i:1;s:5:"$pObj";}}s:6:"return";a:2:{i:0;s:4:"null";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if ($GLOBALS['userAlreadyAddedToSalesforceInThisSession']) {
			return;
		}

		if (!$pObj->conf['salesforce.']['enable'] || !$pObj->conf['salesforce.']['oid']) {
			return;
		}

		if ($params['variables']['markerArray']['tx_datamintsfeuser_approval_level'] > 0) {
			return;
		}

		$fields = array(
			'oid' => $pObj->conf['salesforce.']['oid']
		);

		foreach ($pObj->conf
[...]
clude_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_salesforce.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:1274;s:13:"content_lines";i:48;s:6:"atLine";i:54;}}s:10:"usageCount";a:2:{s:12:"H_32c2929e28";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:37:"class tx_datamintsfeuser_salesforce {";}s:12:"H_10986cfa77";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function main($params, $pObj) {";}}}s:14:"MD5_850248a7ec";a:5:{s:8:"filename";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:8:"filesize";i:15774;s:6:"header";a:5:{s:4:"text";s:56:"

Library 'Utils' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:16:{i:1;a:8:{s:6:"header";s:32:"class tx_datamintsfeuser_utils {";s:5:"class";i:1;s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:5:{s:4:"text";s:56:"

Library 'Utils' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:7:"content";a:2:{i:0;s:3:"

	";i:1;i:-1;}s:12:"content_size";i:3;s:13:"content_lines";i:2;s:6:"atLine";i:58;}i:3;a:7:{s:6:"header";s:37:"function getFeUsersTca($feUsersTca) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:85:"

Ueberschreibt eventuell vorhandene TCA Konfiguration mit TypoScript Konfiguration.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$feUsersTca";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:17:"$globalFeUsersTca";}}s:7:"content";a:2:{i:0;s:308:"		$GLOBALS['TSFE']->includeTCA();
		$globalFeUsersTca = $GLOBALS['TCA']['fe_users'];

		if ($feUsersTca) {
			$globalFeUsersTca['columns'] = t3lib_div::array_merge_recursive_overrule((array)$globalFeUsersTca['columns'], (array)t3lib_div::removeDotsFromTS($feUsersTca));
		}

		return $globalFeUsersTca;
	}

	";i:1;i:0;}s:12:"content_size";i:308;s:13:"content_lines";i:10;s:6:"atLine";i:67;}i:5;a:7:{s:6:"header";s:37:"function getStoragePid($storagePid) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:78:"

Ermittelt die General Record Storage Pid, falls keine Pid uebergeben wurde.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:11:"$storagePid";}}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:11:"$storagePid";}}s:7:"content";a:2:{i:0;s:175:"		if (!$storagePid) {
			$arrayRootPids = $GLOBALS['TSFE']->getStorageSiterootPids();
			$storagePid = $arrayRootPids['_STORAGE_PID'];
		}

		return intval($storagePid);
	}

	";i:1;i:0;}s:12:"content_size";i:175;s:13:"content_lines";i:8;s:6:"atLine";i:84;}i:7;a:7:{s:6:"header";s:60:"function getTypoLinkUrl($params, $urlParameters = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:53:"

Ermittelt die Url zu einer Seite oder einer Datei.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:7:"$params";}i:1;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$pageLink";}}s:7:"content";a:2:{i:0;s:138:"		$cObj = t3lib_div::makeInstance('tslib_cObj');
		$pageLink = $cObj->getTypoLink_URL($params, $urlParameters);

		return $pageLink;
	}

	";i:1;i:0;}s:12:"content_size";i:138;s:13:"content_lines";i:6;s:6:"atLine";i:100;}i:9;a:7:{s:6:"header";s:55:"function htmlspecialcharsPostArray($arrData, $decode) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:147:"

Konvertiert alle Inhalte des uebergebenen Arrays um z.B. XSS zu verhindern.
Der Modus gibt an ob das Array encodiert oder decodiert werden soll.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:7:"$decode";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:586:"		if ($decode) {
			// Konvertiert alle moeglichen Zeichen die fuer die Ausgabe angepasst wurden zurueck.
			foreach ($arrData as $key => $val) {
				$arrData[$key] = htmlspecialchars_decode($val);
			}
		} else {
			// Konvertiert alle moeglichen Zeichen der Ausgabe, die stoeren koennten (XSS).
			foreach ($arrData as $key => $val) {
				if (is_array($arrData[$key])) {
					foreach ($arrData[$key] as $subKey => $subVal) {
						$arrData[$key][$subKey] = strip_tags($subVal);
					}
				} else {
					$arrData[$key] = htmlspecialchars($val);
				}
			}
		}

		return $arrData;
	}

	";i:1;i:0;}s:12:"content_size";i:586;s:13:"content_lines";i:21;s:6:"atLine";i:115;}i:11;a:7:{s:6:"header";s:62:"function generatePassword($password, $arrGenerate = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:125:"

Erstellt wenn gefordert ein Password, und verschluesselt dieses, oder das uebergebene, wenn es verschluesselt werden soll.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:9:"$password";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$arrGenerate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:12:"$arrPassword";}}s:7:"content";a:2:{i:0;s:507:"		$arrPassword = array();

		// Uebergebenes Password setzten.
		// Hier wird kein strip_tags() o.Ae. benoetigt, da beim schreiben in die Datenbank immer "$GLOBALS['TYPO3_DB']->fullQuoteStr()" ausgefuehrt wird!
		$arrPassword['normal'] = trim($password);

		// Erstellt ein Password.
		if ($arrGenerate['mode']) {
			$i = 1;
			$arrPassword['normal'] = '';
			$chars = '23456
[...]
rd['encrypted'] = $tx_t3secsaltedpw_phpass->getHashedPassword($arrPassword['normal']);
			}
		}

		return $arrPassword;
	}

	";i:1;i:1;}s:12:"content_size";i:2150;s:13:"content_lines";i:55;s:6:"atLine";i:144;}i:13;a:7:{s:6:"header";s:62:"function checkPassword($submitedPassword, $originalPassword) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:172:"

Ueberprueft anhand der aktuellen Verschluesselungsextension, ob das uebergebene unverschluesselte Passwort mit dem uebergebenen verschluesselten Passwort uebereinstimmt.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:17:"$submitedPassword";}i:1;a:2:{i:0;s:6:"string";i:1;s:17:"$originalPassword";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:6:"$check";}}s:7:"content";a:2:{i:0;s:507:"		$check = false;

		// Wenn "saltedpasswords" installiert ist wird deren Konfiguration geholt, und je nach Einstellung das Password ueberprueft.
		if (t3lib_extMgm::isLoaded('saltedpasswords')) {
			$saltedpasswords = tx_saltedpasswords_div::returnExtConf();

			if ($saltedpasswords['enabled'] == 1) {
				$tx_saltedpasswords = t3lib_div::makeInstance($saltedpasswords['sal
[...]
schluesselung).
		else {
			if ($submitedPassword == $originalPassword) {
				$check = true;
			}
		}

		return $check;
	}

	";i:1;i:1;}s:12:"content_size";i:1684;s:13:"content_lines";i:48;s:6:"atLine";i:207;}i:15;a:7:{s:6:"header";s:72:"function userAutoLogin($userId, $pageId = 0, $urlParameters = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:43:"

Vollzieht einen Login ohne ein Passwort.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:7:"integer";i:1;s:7:"$pageId";}i:2;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:302:"		// Login vollziehen.
		$GLOBALS['TSFE']->fe_user->checkPid = 0;

		$userRecord = $GLOBALS['TSFE']->fe_user->getRawUserByUid($userId);

		$GLOBALS['TSFE']->fe_user->createUserSession($userRecord);

		// Umleiten, damit der Login wirksam wird.
		self::userRedirect($pageId, $urlParameters, true);
	}

	";i:1;i:0;}s:12:"content_size";i:302;s:13:"content_lines";i:11;s:6:"atLine";i:264;}i:17;a:7:{s:6:"header";s:91:"function userRedirect($pageId = 0, $urlParameters = array(), $disableAccessCheck = false) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:82:"

Vollzieht einen Redirect mit der Seite die benutzt wird, oder auf die aktuelle.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$pageId";}i:1;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:19:"$disableAccessCheck";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Normalen Redirect, oder Redirect auf die gewuenschte Seite.
		if (!$pageId) {
			$pageId = $GLOBALS['TSFE']->id;
		}

		// Damit man auch auf Seiten die erst nach dem Login sichtbar sind umleiten kann, wird hier die Gruppen Zugangsüberprüfung vorrübergehend deaktiviert.
		// Das wird aber nur bei einem Autologin benötigt, da sich nur dort der Status des Users wäh
[...]
lf::getTypoLinkUrl($pageId, $urlParameters);

		header('Location: ' . t3lib_div::locationHeaderUrl($pageLink));
		exit;
	}

	";i:1;i:1;}s:12:"content_size";i:803;s:13:"content_lines";i:18;s:6:"atLine";i:284;}i:19;a:7:{s:6:"header";s:31:"function escapeBrackets($url) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:50:"

URL encoded die eckigen Klammern in einem Link.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$url";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:128:"		$replace = array('[' => '%5b', ']' => '%5d');

		return str_replace(array_keys($replace), array_values($replace), $url);
	}

	";i:1;i:0;}s:12:"content_size";i:128;s:13:"content_lines";i:5;s:6:"atLine";i:309;}i:21;a:7:{s:6:"header";s:43:"function cleanSpecialFieldKey($fieldName) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:113:"

Ersetzt die beim Eingeben angegebenen '--' Zeichen vor und hinter dem eigendlichen Feldnamen, falls vorhanden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:134:"		if (preg_match('/^--.*--$/', $fieldName)) {
			return preg_replace('/^--(.*)--$/', '\1', $fieldName);
		}
		return $fieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:134;s:13:"content_lines";i:6;s:6:"atLine";i:321;}i:23;a:7:{s:6:"header";s:51:"public function convertHtmlEmailToPlain($content) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:59:"

Convertiert eine HTML E-Mail zu einer Plain Text E-Mail.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$newLine = chr(13) . chr(10);

		// Den Head entfernen.
		$content = preg_replace('/<head>.*?<\/head>/s', '', $content, 1);

		// Links auflösen (A-Tag entfernen und Href extrahieren).
		$content = preg_replace('/<a[^>]*href="([^"]*)"[^>]*>[^<]*<\/a>/i', ' $1 ', $content);

		// Nach jedem schliessenden Tag eine Leerzeile einfuegen.
		$content = preg_replace('/>/i', '>'
[...]
araus machen.
		$content = preg_replace('/(' . $newLine . '){2,}/', $newLine . $newLine, $content);

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:980;s:13:"content_lines";i:32;s:6:"atLine";i:334;}i:25;a:7:{s:6:"header";s:83:"function getTemplateSubpart($templateFile, $templatePart, $markerArray = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:74:"

Holt einen Subpart des Standardtemplates und ersetzt uebergeben Marker.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$templateFile";}i:1;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$markerArray";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$template";}}s:7:"content";a:2:{i:0;s:404:"		// Template laden.
		$cObj = t3lib_div::makeInstance('tslib_cObj');
		$template = $cObj->fileResource($templateFile);
		$template = $cObj->getSubpart($template, '###' . strtoupper($templatePart) . '###');

//		if (!self::checkUtf8($template)) {
//			$template = utf8_encode($template);
//		}

		$template = $cObj->substituteMarkerArray($template, $markerArray, '###|###', 1);

		return $template;
	}

	";i:1;i:0;}s:12:"content_size";i:404;s:13:"content_lines";i:14;s:6:"atLine";i:375;}i:27;a:7:{s:6:"header";s:56:"function readFlexformTab($flexData, $sTab, $conf = '') {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:76:"

Parst das Flexform Konfigurations Array und schreibt alle Werte in $conf.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:9:"$flexData";}i:1;a:2:{i:0;s:6:"string";i:1;s:6:"$sType";}i:2;a:2:{i:0;s:5:"array";i:1;s:63:"$conf // Call by reference Array mit allen zu updatenden Daten.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		 if (is_array($flexData)) {
			 if (isset($flexData['data'][$sTab]['lDEF'])) {
				 $flexData = $flexData['data'][$sTab]['lDEF'];
			 }

			 foreach ($flexData as $key => $value) {
				 if (is_array($value['el']) && count($value['el']) > 0) {
					 foreach ($value['el'] as $ekey => $element) {
						 if (isset($element['vDEF'])) {
							 $conf[$ekey] = $element['vDEF'];
[...]
ab, $conf);
				 }

				 if ($value['vDEF']) {
					 $conf[$key] = $value['vDEF'];
				 }
			 }
		 }

		 return $conf;
	 }

	";i:1;i:1;}s:12:"content_size";i:690;s:13:"content_lines";i:27;s:6:"atLine";i:398;}i:29;a:4:{s:6:"header";s:56:"function setFlexformConfiguration($key, $value, $conf) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:106:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen mit den Konfigurationen aus der Flexform.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$key";}i:1;a:2:{i:0;s:6:"string";i:1;s:6:"$value";}i:2;a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"atLine";i:434;}i:31;a:7:{s:6:"header";s:26:"function checkUtf8($str) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:45:"

Checks if a string is utf8 encoded or not.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$str";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$len = strlen($str);
		for ($i = 0; $i < $len; $i++) {
			$c = ord($str[$i]);

			if ($c > 128) {
				if (($c > 247)) {
					return false;
				} else if ($c > 239) {
					$bytes = 4;
				} else if ($c > 223) {
					$bytes = 3;
				} else if ($c > 191) {
					$bytes = 2;
				} else {
					return false;
				}

				if (($i + $bytes) > $len) {
					return false;
				}

				w
[...]
{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_utils.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:804;s:13:"content_lines";i:44;s:6:"atLine";i:464;}}s:10:"usageCount";a:16:{s:12:"H_53a2e46ba8";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:32:"class tx_datamintsfeuser_utils {";}s:12:"H_bc6bcaad7e";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:37:"function getFeUsersTca($feUsersTca) {";}s:12:"H_d80f13bb44";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:37:"function getStoragePid($storagePid) {";}s:12:"H_edd3d45342";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:5;s:5:"TOTAL";i:5;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:60:"function getTypoLinkUrl($params, $urlParameters = array()) {";}s:12:"H_b78b1a428b";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:55:"function htmlspecialcharsPostArray($arrData, $decode) {";}s:12:"H_9c208336f3";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:62:"function generatePassword($password, $arrGenerate = array()) {";}s:12:"H_921cd090f1";a:5:{s:3:"ALL";a:3:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:3;s:14:"nonObjectUsage";i:1;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:62:"function checkPassword($submitedPassword, $originalPassword) {";}s:12:"H_9bc8d6b910";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:72:"function userAutoLogin($userId, $pageId = 0, $urlParameters = array()) {";}s:12:"H_4d109e5db5";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:91:"function userRedirect($pageId = 0, $urlParameters = array(), $disableAccessCheck = false) {";}s:12:"H_4705906fdd";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function escapeBrackets($url) {";}s:12:"H_bac26dec65";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:43:"function cleanSpecialFieldKey($fieldName) {";}s:12:"H_47bff921ed";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:51:"public function convertHtmlEmailToPlain($content) {";}s:12:"H_77460409ce";a:4:{s:3:"ALL";a:3:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:14:"MD5_8f66ccd171";a:4:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:83:"function getTemplateSubpart($templateFile, $templatePart, $markerArray = array()) {";}s:12:"H_a88a7bfc40";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:56:"function readFlexformTab($flexData, $sTab, $conf = '') {";}s:12:"H_f4e9cdd666";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:56:"function setFlexformConfiguration($key, $value, $conf) {";}s:12:"H_8c58dc9f10";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:26:"function checkUtf8($str) {";}}}s:14:"MD5_8f66ccd171";a:5:{s:8:"filename";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:8:"filesize";i:102671;s:6:"header";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:47:{i:1;a:8:{s:6:"header";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:7:"content";a:2:{i:0;s:651:"	var $extKey = 'datamints_feuser';
	var $prefixId = 'tx_datamintsfeuser_pi1';
	var $scriptRelPath = 'pi1/class.tx_datamintsfeuser_pi1.php';
	var $pi_checkCHash = true;
	var $feUsersTca = array();
	var $storagePid = 0;
	var $contentUid = 0;
	var $conf = array();
	var $extConf = array();
	var $lang = array();
	var $userId = 0;
	var $arrUsedFields = array();
	var $arrRequiredFields = array();
	var $arrUniqueFields = array();
	var $arrHiddenParams = array();

	const submitKeySend = 'send';
	const submitKeyApprovalcheck = 'approvalcheck';

	const submodeKeySent = 'sent';
	const submodeKeySuccess = 'success';
	const submodeKeyFailure = 'failure';

	";i:1;i:-1;}s:12:"content_size";i:651;s:13:"content_lines";i:23;s:6:"atLine";i:92;}i:3;a:7:{s:6:"header";s:32:"function main($content, $conf) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:32:"

The main method of the PlugIn
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:8:"$content";}i:1;a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$this->conf = $conf;

		// Debug.
//		$GLOBALS['TSFE']->set_no_cache();
//		$GLOBALS['TYPO3_DB']->debugOutput = true;

		// ContentId ermitteln.
		$this->contentId = $this->cObj->data['uid'];

		// UserId ermitteln.
		$this->userId = $GLOBALS['TSFE']->fe_user->user['uid'];

		// PiVars und Flexform laden.
		$this->pi_setPiVarDefaults();
		$this->pi_initPIflexForm();

		/
[...]
			break;

			default:
				$content = $this->showForm();
				break;

		}

		return $this->pi_wrapInBaseClass($content);
	}

	";i:1;i:1;}s:12:"content_size";i:3406;s:13:"content_lines";i:73;s:6:"atLine";i:123;}i:5;a:7:{s:6:"header";s:47:"function getConfigByShowtype($subConfig = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:94:"

Ermittelt die komplette oder die uebergebene Unter-Konfiguration des aktuellen Anzeigetyps.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$subConfig";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:150:"		if (!$subConfig) {
			return $this->conf[$this->conf['showtype'] . '.'];
		}

		return $this->conf[$this->conf['showtype'] . '.'][$subConfig];
	}

	";i:1;i:0;}s:12:"content_size";i:150;s:13:"content_lines";i:7;s:6:"atLine";i:203;}i:7;a:7:{s:6:"header";s:21:"function sendForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:122:"

Bereitet die uebergebenen Daten fuer den Import in die Datenbank vor, und fuehrt diesen, wenn es keine Fehler gab, aus.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$mode = '';
		$submode = '';
		$params = array();
		$arrUpdate = array();

		// Jedes Element in piVars trimmen.
		$this->trimPiVars();

		// Ueberpruefen ob Datenbankeintraege mit den uebergebenen Daten uebereinstimmen.
		$uniqueCheck = $this->uniqueCheckForm();

		// Eine Validierung durchfuehren ueber alle Felder die eine gesonderte Konfigurtion bekommen haben.
		$val
[...]
serFunction($_funcRef, $_params, $this);
			}
		}

		return $this->showMessageOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:7808;s:13:"content_lines";i:187;s:6:"atLine";i:216;}i:9;a:7:{s:6:"header";s:23:"function trimPiVars() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:35:"

Jedes Element in piVars trimmen.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:164:"		foreach ($this->piVars[$this->contentId] as $key => $value) {
			if (!is_array($value)) {
				$this->piVars[$this->contentId][$key] = trim($value);
			}
		}
	}

	";i:1;i:0;}s:12:"content_size";i:164;s:13:"content_lines";i:7;s:6:"atLine";i:409;}i:11;a:7:{s:6:"header";s:28:"function uniqueCheckForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:112:"

Ueberprueft die uebergebenen Inhalte, bei bestimmten Feldern, ob diese in der Datenbank schon vorhanden sind.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$where = '';
		$valueCheck = array();

		// Beim Bearbeiten, den eigenen Datensatz nicht durchsuchen.
		if ($this->conf['showtype'] == 'edit') {
			$where .= ' AND uid <> ' . $this->userId;
		}

		// Wenn beim Bearbeiten keine "userfolder" gesetzt ist, soll global ueberprueft werden, ansonsten nur im Storage!
		if ($this->conf['showtype'] != 'edit' || $this->getConfigByS
[...]
oc($res);

				if ($row['count'] >= 1) {
					$valueCheck[$fieldName] = 'unique';
				}
			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:959;s:13:"content_lines";i:27;s:6:"atLine";i:422;}i:13;a:7:{s:6:"header";s:25:"function validateForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Ueberprueft ob alle Validierungen eingehalten wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Alle ausgewaehlten Felder durchgehen.
		foreach ($this->arrUsedFields as $fieldName) {
			$fieldName = tx_datamintsfeuser_utils::cleanSpecialFieldKey($fieldName);
			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			$value = $this->piVars[$this->contentId][$fieldName];
			$validate = $this->conf['validate.'][$fieldName . 
[...]
e)) {
								$valueCheck[$fieldName] = 'length';
							}
						}
					}
					break;

			}

		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:4949;s:13:"content_lines";i:147;s:6:"atLine";i:455;}i:15;a:7:{s:6:"header";s:29:"function requireCheckForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:73:"

Ueberprueft ob alle benoetigten Felder mit Inhalten uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Geht alle benoetigten Felder durch und ermittelt fehlende.
		foreach ($this->arrRequiredFields as $fieldName) {
			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			// Ueberpruefen, ob das Feld ueberhaupt benoetigt wird.
			if (!in_array($fieldName, $this->arrUsedFields)) {
				continue;
			}

			// Ueberpruefen, ob ein W
[...]
amintsfeuser_utils::cleanSpecialFieldKey($fieldName)] = 'required';
					}
					break;

			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:2065;s:13:"content_lines";i:48;s:6:"atLine";i:608;}i:17;a:7:{s:6:"header";s:31:"function checkCaptcha($value) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Ueberprueft ob das Captcha richtig eingegeben wurde.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:6:"$value";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if ($this->conf['captcha.']['use'] == 'captcha' && t3lib_extMgm::isLoaded('captcha')) {
			session_start();

			$captchaString = $_SESSION['tx_captcha_string'];

			if ($value != $captchaString) {
				return 'valid';
			}
		}

		if ($this->conf['captcha.']['use'] == 'sr_freecap' && t3lib_extMgm::isLoaded('sr_freecap')) {
			require_once(t3lib_extMgm::extPath('sr_freecap'
[...]
wtcalculatingcaptcha');

			if (!$calculatingcaptcha->correctCode($value)) {
				return 'valid';
			}
		}

		return '';
	}

	";i:1;i:1;}s:12:"content_size";i:1324;s:13:"content_lines";i:45;s:6:"atLine";i:663;}i:19;a:7:{s:6:"header";s:67:"function cleanPasswordField($fieldName, $fieldConfig, $arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:90:"

Falls angegebe das Passwort fuer ein Passwortfeld generieren und / oder verschluesseln.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:430:"		// Password generieren und verschluesseln je nach Einstellung.
		$password = tx_datamintsfeuser_utils::generatePassword($this->piVars[$this->contentId][$fieldName], $this->getConfigByShowtype('generatepassword.'));
		$arrUpdate[$fieldName] = $password['encrypted'];

		// Wenn kein Password uebergeben wurde auch keins schreiben.
		if (!$arrUpdate[$fieldName]) {
			unset($arrUpdate[$fieldName]);
		}

		return $arrUpdate;
	}

	";i:1;i:0;}s:12:"content_size";i:430;s:13:"content_lines";i:12;s:6:"atLine";i:717;}i:21;a:7:{s:6:"header";s:67:"function cleanCheckboxField($fieldName, $fieldConfig, $arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:163:"

Saeubert Checkboxfelder, indem die uebergebenen Werte durch 1 oder 0 ausgetauscht werden.
Gilt fuer eine oder mehrere Checkboxen (nicht fuer scrollbare Listen).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:576:"		$countCheckFields = count($fieldConfig['items']);

		// Mehrere Checkboxen oder eine Checkbox.
		if ($countCheckFields > 1) {
			$binString = '';

			for ($i = 0; $i < $countCheckFields; $i++) {
				if (in_array($i, $this->piVars[$this->contentId][$fieldName])) {
					$binString .= '1';
				} else {
					$binString .= '0';
				}
			}

			$arrUpdate[$fieldName] = bindec(strrev($binString));
		} else {
			if ($this->piVars[$this->contentId][$fieldName]) {
				$arrUpdate[$fieldName] = '1';
			} else {
				$arrUpdate[$fieldName] = '0';
			}
		}

		return $arrUpdate;
	}

	";i:1;i:0;}s:12:"content_size";i:576;s:13:"content_lines";i:26;s:6:"atLine";i:739;}i:23;a:7:{s:6:"header";s:76:"function cleanMultipleSelectboxField($fieldName, $fieldConfig, $arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:95:"

Saeubert MultipleSelectboxfelder indem auf jeden uebergebenen Wert intval() angewendet wird.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:565:"		$maxItemsCount = 1;
		$arrCleanedValues = array();

		// Wenn nichts ausgewaehlt wurde, wird auch dieser Parameter nicht uebergeben, daher zuerst ueberpruefen, ob etwas vorhanden ist.
		if ($this->piVars[$this->contentId][$fieldName]) {
			foreach ($this->piVars[$this->contentId][$fieldName] as $val) {
				if ($fieldConfig['maxitems'] && $maxItemsCount > $fieldConfig['maxitems']) {
					break;
				}

				$arrCleanedValues[] = intval($val);
				$maxItemsCount++;
			}
		}

		$arrUpdate[$fieldName] = implode(',', $arrCleanedValues);

		return $arrUpdate;
	}

	";i:1;i:0;}s:12:"content_size";i:565;s:13:"content_lines";i:20;s:6:"atLine";i:774;}i:25;a:7:{s:6:"header";s:83:"function cleanGroupAndMultipleCheckboxField($fieldName, $fieldConfig, $arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:65:"

Saeubert Group- und MultipleCheckboxfelder (scrollbare Liste).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:507:"		$arrCleanedValues = array();
		$arrAllowed = t3lib_div::trimExplode(',', $fieldConfig['allowed'], true);

		foreach ($arrAllowed as $table) {
			if ($GLOBALS['TCA'][$table]) {
				foreach ($this->piVars[$this->contentId][$fieldName] as $val) {
					if (preg_match('/^' . $table . '_[0-9]+$/', $val)) {
						$arrCleanedValues[] = $val;
					}
				}
			}
		}

		// Falls nur
[...]
, strripos($val, '_') + 1);
			}
		}

		$arrUpdate[$fieldName] = implode(',', $arrCleanedValues);

		return $arrUpdate;
	}

	";i:1;i:1;}s:12:"content_size";i:689;s:13:"content_lines";i:25;s:6:"atLine";i:803;}i:27;a:7:{s:6:"header";s:68:"function cleanUncleanedField($fieldName, $fieldConfig, $arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Saeubert die uebrigen Felder (Input, Textarea, ...).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:595:"		// Wenn eine Checkbox oder eine einfache Selectbox, dann darf nur eine Zahl kommen!
		if ($fieldConfig['type'] == 'check' || ($fieldConfig['type'] == 'select' && $fieldConfig['size'] == 1)) {
			$arrUpdate[$fieldName] = intval($this->piVars[$this->contentId][$fieldName]);
		}

		// Ansonsten Standardsaeuberung.
		$arrUpdate[$fieldName] = strip_tags($this->piVars[$this->contentId][$fieldName]);

		// Wenn E-Mail Feld, alle Zeichen zu kleinen Zeichen konvertieren.
		if ($fieldName == 'email') {
			$arrUpdate[$fieldName] = strtolower($arrUpdate[$fieldName]);
		}

		return $arrUpdate;
	}

	";i:1;i:0;}s:12:"content_size";i:595;s:13:"content_lines";i:16;s:6:"atLine";i:837;}i:29;a:7:{s:6:"header";s:33:"function copyFields($arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:189:"

Kopiert anhand der angegebenen Konfigurationen Inhalte in dem uebergebenen Array an eine neue oder andere Stelle.
Dabei wird auf jeden kopierten Inhalt die stdWrap Funktionen angewendet.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:7:"content";a:2:{i:0;s:507:"		// Kopiert den Inhalt eines Feldes in ein anderes Feld.
		$arrCopiedFields = array();

		foreach ((array)$this->conf['copyfields.'] as $fieldToCopy => $arrCopyToFields) {
			$fieldToCopy = rtrim($fieldToCopy, '.');

			// Wenn das Feld nich existiert, ueberspringen.
			if (!array_key_exists($fieldToCopy, $this->feUsersTca['columns'])) {
				continue;
			}

			foreach (ar
[...]
 = $cObj->stdWrap($arrUpdate[$fieldToCopy], $arrCopyToFields[$copyToField . '.']);
				}
			}
		}

		return $arrUpdate;
	}

	";i:1;i:1;}s:12:"content_size";i:1458;s:13:"content_lines";i:45;s:6:"atLine";i:861;}i:31;a:7:{s:6:"header";s:31:"function editUser($arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:67:"

Editiert einen vorhandenen User, anhand des uebergebenen Arrays.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:8:"$arrMode";}}s:7:"content";a:2:{i:0;s:507:"		$arrMode = array();

		// Der User hat seine Daten editiert.
		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $this->userId , $arrUpdate);

		// User und Admin Benachrichtigung schicken, aber nur wenn etwas geaendert wurde.
		if ($this->getConfigByShowtype('sendusermail') || $this->getConfigByShowtype('sendadminmail')) {
			$extraMarkers = $this->getChange
[...]
loescht wurde, weiterleiten.
		if ($arrUpdate['deleted']) {
			$arrMode['mode'] = 'userdelete';
		}

		return $arrMode;
	}

	";i:1;i:1;}s:12:"content_size";i:1100;s:13:"content_lines";i:30;s:6:"atLine";i:913;}i:33;a:7:{s:6:"header";s:35:"function registerUser($arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Erstellt einen User, anhand des uebergebenen Arrays.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:10:"$arrUpdate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:8:"$arrMode";}}s:7:"content";a:2:{i:0;s:507:"		$arrMode = array();

		// Standartkonfigurationen anwenden.
		$arrUpdate['pid'] = $this->storagePid;
		$arrUpdate['crdate'] = $arrUpdate['tstamp'];
		$arrUpdate['usergroup'] = ($arrUpdate['usergroup']) ? $arrUpdate['usergroup'] : $this->getConfigByShowtype('usergroup');

		// Genehmigungstypen aufsteigend sortiert ermitteln. Das ist noetig um das Level dem richtigen Typ 
[...]
Success;
			$arrMode['params'] = array('autologin' => $this->getConfigByShowtype('autologin'));
		}

		return $arrMode;
	}

	";i:1;i:1;}s:12:"content_size";i:2483;s:13:"content_lines";i:55;s:6:"atLine";i:950;}i:35;a:7:{s:6:"header";s:36:"function generatePasswordForMail() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:176:"

Erstellt ein neues Passwort, falls Passwort generieren eingestellt ist. Das Passwort kannn dann ueber den Marker "###PASSWORD###" mit der Registrierungsmail gesendet werden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:488:"		$extraMarkers = array();
		$generatePassword = $this->getConfigByShowtype('generatepassword.');

		if ($generatePassword['mode'] && $this->userId) {
			$password = tx_datamintsfeuser_utils::generatePassword($this->piVars[$this->contentId]['password'], $generatePassword);

			$extraMarkers['password'] = $password['normal'];

			$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $this->userId, array('password' => $password['encrypted']));
		}

		return $extraMarkers;
	}

	";i:1;i:0;}s:12:"content_size";i:488;s:13:"content_lines";i:14;s:6:"atLine";i:1011;}i:37;a:7:{s:6:"header";s:51:"function saveDeleteImage($fieldName, &$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:80:"

The saveDeleteImage method is used to update or delete an image of an address
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:68:"$arrUpdate // Call by reference Array mit allen zu updatenden Daten.";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

		// Verzeichniss ermitteln.
		$uploadFolder = $fieldConfig['uploadfolder'];

		if (substr($uploadFolder, -1) != '/') {
			$uploadFolder = $uploadFolder . '/';
		}

		// Bild loeschen und ueberpruefen ob das Bild auch wirklich existiert.
		if ($this->piVars[$this->contentId][$fieldName . '_delete']) {
		
[...]
;

				// Wenn Das Bild erfolgreich hochgeladen wurde, nichts zurueckgeben.
				return '';
			}
		}

		return 'upload';
	}

	";i:1;i:1;}s:12:"content_size";i:2558;s:13:"content_lines";i:79;s:6:"atLine";i:1033;}i:39;a:7:{s:6:"header";s:77:"function showMessageOutputRedirect($mode, $submode = '', $params = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:174:"

Erledigt allen Output der nichts mit dem eigendlichen Formular zu tun hat.
Fuer besondere Faelle kann hier eine Ausnahme, oder zusaetzliche Konfigurationen gesetzt werden.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:5:"$mode";}i:1;a:2:{i:0;s:6:"string";i:1;s:8:"$submode";}i:2;a:2:{i:0;s:5:"array";i:1;s:7:"$params";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:507:"		$redirect = true;

		$labelKey = $mode;
		$redirectKey = $mode;

		if ($submode) {
			$labelKey .= '_' . $submode;

			// Wenn für den Submode eine eigene Weiterleitungsseite definiert ist, diese benutzen!
			if ($this->conf['redirect.'][$redirectKey . '_' . $submode]) {
				$redirectKey .= '_' . $submode;
			}
		}

		// Label ermitteln
		$label = $this->getLabel($label
[...]
user_utils::userRedirect($this->conf['redirect.'][$redirectKey], $this->makeHiddenParamsArray());
		}

		return $label;
	}

	";i:1;i:1;}s:12:"content_size";i:3231;s:13:"content_lines";i:89;s:6:"atLine";i:1122;}i:41;a:7:{s:6:"header";s:42:"function sendActivationMail($userId = 0) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Sendet die Aktivierungsmail an den uebergebenen User.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if (!$userId) {
			$userId = $this->userId;
		}

		// Neuen Timestamp setzten, damit jede Aktivierungsmail einen anderen Hash hat.
		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $userId, array('tstamp' => time()));

		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, tx_datamintsfeuser_approval_level', 'fe_users', 'uid
[...]
arkers);

		// Cookie fuer das erneute zusenden des Aktivierungslinks setzten.
		$this->setNotActivatedCookie($userId);
	}

	";i:1;i:1;}s:12:"content_size";i:2469;s:13:"content_lines";i:39;s:6:"atLine";i:1218;}i:43;a:7:{s:6:"header";s:30:"function makeApprovalCheck() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:89:"

Ueberprueft ob die Linkbestaetigung gueltig ist und aktiviert gegebenenfalls den User.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, tx_datamintsfeuser_approval_level', 'fe_users', 'uid = ' . $this->userId . ' AND pid = ' . $this->storagePid, '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		// Genehmigungstyp ermitteln um die richtige E-Mail zu senden, bzw. die richtige Ausgabe zu ermitteln.
		$
[...]
Ausgabe vorbereiten.
			$submode = 'deleted';
		}

		return $this->showMessageOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:3387;s:13:"content_lines";i:72;s:6:"atLine";i:1263;}i:45;a:7:{s:6:"header";s:29:"function getApprovalTypes() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:36:"

Ermittelt alle Genehmigungstypen.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:419:"		// Genhemigungstypen aufsteigend sortiert ermitteln. Das ist noetig um das Level dem richtigen Typ zuordnen zu koennen.
		// Beispiel: approvalcheck = ,doubleoptin,adminapproval => beim exploden kommt dann ein leeres Arrayelement herraus, das nach dem entfernen einen leeren Platz uebrig laesst.
		return array_values(t3lib_div::trimExplode(',', $this->getConfigByShowtype(self::submitKeyApprovalcheck), true));
	}

	";i:1;i:0;}s:12:"content_size";i:419;s:13:"content_lines";i:5;s:6:"atLine";i:1341;}i:47;a:7:{s:6:"header";s:37:"function isAdminMail($approvalType) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:177:"

Ueberprueft anhand des Genehmigungstyps ob die Mail eine Adminmail oder eine Usermail ist. Wenn 'admin' im Namen des Genehmigungstyps steht, dann ist die Mail eine Adminmail.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$approvalType";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:73:"		return (strpos($approvalType, 'admin') === false) ? false : true;
	}

	";i:1;i:0;}s:12:"content_size";i:73;s:13:"content_lines";i:3;s:6:"atLine";i:1353;}i:49;a:7:{s:6:"header";s:41:"function setNotActivatedCookie($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:90:"

Setzt einen Cookie fuer den neu angelegten Account, falls dieser aktiviert werden muss.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:212:"		$arrNotActivated = $this->getNotActivatedUserArray();
		$arrNotActivated[] = intval($userId);

		setcookie($this->prefixId . '[not_activated]', implode(',', $arrNotActivated), time() + 60 * 60 * 24 * 30);
	}

	";i:1;i:0;}s:12:"content_size";i:212;s:13:"content_lines";i:6;s:6:"atLine";i:1363;}i:51;a:7:{s:6:"header";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:63:"

Ermittelt alle nicht aktivierten Accounts des Users, falls .
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:16:"$arrNotActivated";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:23:"$arrNotActivatedCleaned";}}s:7:"content";a:2:{i:0;s:507:"		$arrNotActivatedCleaned = array();

		// Nicht aktivierte User ueber den Cookie ermitteln, und vor missbrauch schuetzen.
		if (!$arrNotActivated) {
			$arrNotActivated = array_map('intval', array_unique(t3lib_div::trimExplode(',', $_COOKIE[$this->prefixId]['not_activated'], true)));
		}

		// Wenn nach dem reinigen noch User uebrig bleiben.
		if (count($arrNotActivated) 
[...]
DB']->sql_fetch_assoc($res)) {
				$arrNotActivatedCleaned[] = $row['uid'];
			}
		}

		return $arrNotActivatedCleaned;
	}

	";i:1;i:1;}s:12:"content_size";i:796;s:13:"content_lines";i:20;s:6:"atLine";i:1376;}i:53;a:7:{s:6:"header";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:100:"

Sendet die E-Mails mit dem uebergebenen Template und falls angegeben, auch mit den extra Markern.
";s:5:"param";a:6:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:10:"$adminMail";}i:3;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}i:4;a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}i:5;a:2:{i:0;s:5:"array";i:1;s:13:"$extraSuparts";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('*', 'fe_users', 'uid = ' . intval($userId), '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		$markerArray = array_merge((array)$row, (array)$extraMarkers);

		foreach ($markerArray as $key => $val) {
			$markerArray['label_' . $key] = $this->getLabel($key, false);

//			if (!tx
[...]
g['mailtype'] == 'html') {
					$mail->setHTML($mail->encodeMsg($bodyHtml));
				}

				$mail->send($toEmail);
			}
		}
	}

	";i:1;i:1;}s:12:"content_size";i:3727;s:13:"content_lines";i:117;s:6:"atLine";i:1408;}i:55;a:7:{s:6:"header";s:87:"function getTemplateSubpart($templatePart, $markerArray = array(), $config = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:74:"

Holt einen Subpart des Standardtemplates und ersetzt uebergeben Marker.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:1;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$markerArray";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$template";}}s:7:"content";a:2:{i:0;s:325:"		// Template holen.
		$templateFile = $config['emailtemplate'];

		if (!$templateFile) {
			$templateFile = 'EXT:' . $this->extKey . '/res/datamints_feuser_mail.html';
		}

		// Template laden.
		$template = tx_datamintsfeuser_utils::getTemplateSubpart($templateFile, $templatePart, $markerArray);

		return $template;
	}

	";i:1;i:0;}s:12:"content_size";i:325;s:13:"content_lines";i:13;s:6:"atLine";i:1534;}i:57;a:7:{s:6:"header";s:50:"function getChangedForMail($arrNewData, $config) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:72:"

Ermittlet alle geaenderten Daten und schreibt sie in ein Markerarray.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$arrNewData";}i:1;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:507:"		$count = 0;
		$template =  $this->getTemplateSubpart('changed_items', array(), $config);
		$extraMarkers = array();

		foreach ($this->arrUsedFields as $fieldName) {
			if ($arrNewData[$fieldName] != $GLOBALS['TSFE']->fe_user->user[$fieldName]) {
				$markerArray = array();
				$markerArray['label'] = $this->getLabel($fieldName, false);
				$markerArray['value_old'] = $G
[...]
 = '';
			}
		}

		if (!$count) {
			$extraMarkers['nothing_changed'] = 'nothing_changed';
		}

		return $extraMarkers;
	}

	";i:1;i:1;}s:12:"content_size";i:986;s:13:"content_lines";i:31;s:6:"atLine";i:1555;}i:59;a:7:{s:6:"header";s:42:"function showForm($valueCheck = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:111:"

Gibt alle im Backend definierten Felder (TypoScipt/Flexform) formatiert und der Anzeigeart entsprechend aus.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		// Beim editieren der Userdaten, die Felder vorausfuellen.
		if ($this->conf['showtype'] == 'edit') {
			$arrCurrentData = $this->pi_getRecord('fe_users', $this->userId);
		}

		// Wenn das Formular schon einmal abgesendet wurde aber ein Fehler auftrat, dann die bereits vom User uebertragenen Userdaten vorausfuellen.
		if ($this->piVars[$this->contentId]) {
			foreach ($
[...]
nt .= $this->makeHiddenParamsHiddenFields();

		$content .= '</fieldset>';
		$content .= '</form>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:9543;s:13:"content_lines";i:207;s:6:"atLine";i:1593;}i:61;a:7:{s:6:"header";s:43:"function cleanSpecialFieldKey($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:113:"

Ersetzt die beim Eingeben angegebenen '--' Zeichen vor und hinter dem eigendlichen Feldnamen, falls vorhanden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:134:"		if (preg_match('/^--.*--$/', $fieldName)) {
			return preg_replace('/^--(.*)--$/', '\1', $fieldName);
		}
		return $fieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:134;s:13:"content_lines";i:6;s:6:"atLine";i:1807;}i:63;a:7:{s:6:"header";s:57:"function showInput($fieldName, $arrCurrentData, $iItem) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert Inputfelder.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:2;a:2:{i:0;s:7:"integer";i:1;s:6:"$iItem";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';
		$arrFieldConfigEval = t3lib_div::trimExplode(',', $fieldConfig['eval']);

		// Datumsfeld und Datumzeitfeld.
		if (in_array('date', $arrFieldConfigEval) || in_array('datetime', $arrFieldConfigEval)) {
			$datum
[...]
Id . '][' . $fieldName . ']" value="' . $arrCurrentData[$fieldName] . '"' . $disabledField . ' />';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2325;s:13:"content_lines";i:42;s:6:"atLine";i:1822;}i:65;a:7:{s:6:"header";s:48:"function showText($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:21:"

Rendert Textareas.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:452:"		$content = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';

		$content .= '<textarea id="' . $this->extKey . '_' . $this->contentId . '_' . $fieldName . '" name="' . $this->prefixId . '[' . $this->contentId . '][' . $fieldName . ']" rows="2" cols="42"' . $disabledField . '>' . $arrCurrentData[$fieldName] . '</textarea>';

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:452;s:13:"content_lines";i:9;s:6:"atLine";i:1872;}i:67;a:7:{s:6:"header";s:49:"function showCheck($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:22:"

Rendert Checkboxen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';

		$countCheckFields = count($fieldConfig['items']);

		if ($countCheckFields > 1) {
			// Moeglichkeit das der gespeicherte Wert eine Bitmap ist, daher aufsplitten in ein Array, wie es auch von einem abgesendete
[...]
[' . $this->contentId . '][' . $fieldName . ']" value="1"' . $checked . $disabledField . ' />';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2137;s:13:"content_lines";i:46;s:6:"atLine";i:1889;}i:69;a:7:{s:6:"header";s:49:"function showRadio($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Radiobuttons.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';

		$content .= '<div class="radio_item_wrapper">';

		for ($i = 0; $i < count($fieldConfig['items']); $i++) {
			$label = $fieldConfig['items'][$i][0];
			$value = $fieldConfig['items'][$i][1];
			$checked = ($ar
[...]
el($label, false);
			$content .= '</label>';
			$content .= '</div>';
		}

		$content .= '</div>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:1137;s:13:"content_lines";i:24;s:6:"atLine";i:1943;}i:71;a:7:{s:6:"header";s:50:"function showSelect($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Selectfelder.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$optionlist = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';
		$countSelectFields = count($fieldConfig['items']);

		// Moeglichkeit das der gespeicherte Wert eine kommseparierte Liste ist, daher aufsplitten in ein Array, wie es auch von einem abgesende
[...]
'"' . $multiple . $disabledField . '>';
			$content .= $optionlist;
			$content .= '</select>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:4534;s:13:"content_lines";i:79;s:6:"atLine";i:1975;}i:73;a:7:{s:6:"header";s:49:"function showGroup($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert Groupfelder.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];
		$disabledField = ($fieldConfig['readOnly']) ? ' disabled="disabled"' : '';

		// GROUP (z.B. Files oder externe Tabellen).
		// Wenn es sich um den "internal_type" FILE handelt && es ein Bild ist, dann ein Vorschaubild erstellen und ein File-Inputfeld anzeigen.
		if ($fieldConfig['inter
[...]
e . '_item_' . $key . '">'. $label . '</label></div>';
				$i++;
			}

			$content .= '</div>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:3666;s:13:"content_lines";i:82;s:6:"atLine";i:2062;}i:75;a:7:{s:6:"header";s:55:"function showCaptcha($fieldName, $valueCheck, $iItem) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert ein Captcha.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}i:2;a:2:{i:0;s:7:"integer";i:1;s:6:"$iItem";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$captcha = '';
//		$showInput = true;

		if ($this->conf['captcha.']['use'] == 'captcha' && t3lib_extMgm::isLoaded('captcha')) {
			$captcha = '<img src="' . tx_datamintsfeuser_utils::getTypoLinkUrl(t3lib_extMgm::siteRelPath('captcha') . 'captcha/captcha.php') . '" alt="" class="powermail_captcha powermail_captcha_captcha" />';
		}

		if ($this->conf['ca
[...]
e="" />' : '';
		$content .= $this->getErrorLabel($fieldName, $valueCheck);
		$content .= '</div>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2348;s:13:"content_lines";i:50;s:6:"atLine";i:2153;}i:77;a:7:{s:6:"header";s:41:"function makeHiddenParamsHiddenFields() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt Hidden Fields fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:285:"		$content = '';

		foreach ($this->arrHiddenParams as $paramName) {
			if ($_REQUEST[$paramName]) {
				$content .= '<input type="hidden" name="' . $paramName . '" value="' . htmlspecialchars(htmlspecialchars_decode($_REQUEST[$paramName])) . '" />';
			}
		}

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:285;s:13:"content_lines";i:11;s:6:"atLine";i:2209;}i:79;a:7:{s:6:"header";s:34:"function makeHiddenParamsArray() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt GET-Parameter fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrParams";}}s:7:"content";a:2:{i:0;s:221:"		$arrParams = array();

		foreach ($this->arrHiddenParams as $paramName) {
			if ($_REQUEST[$paramName]) {
				$arrParams[$paramName] = htmlspecialchars_decode($_REQUEST[$paramName]);
			}
		}

		return $arrParams;
	}

	";i:1;i:0;}s:12:"content_size";i:221;s:13:"content_lines";i:11;s:6:"atLine";i:2226;}i:81;a:7:{s:6:"header";s:38:"function checkIfRequired($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:82:"

Ueberprueft ob das uebergebene Feld benoetigt wird um erfolgreich zu speichern.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:185:"		if (array_intersect(array($fieldName, '--' . $fieldName . '--'), $this->arrRequiredFields)) {
			return '<span class="required_item_star">*</span>';
		} else {
			return '';
		}
	}

	";i:1;i:0;}s:12:"content_size";i:185;s:13:"content_lines";i:7;s:6:"atLine";i:2244;}i:83;a:7:{s:6:"header";s:44:"function getListItemLabelFieldName($table) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:175:"

Ueberprüft ob es für die uebergebene Tabelle eine andere Labelkonfiguration gibt.
Dieses LabelField wird dann benutzt, um für Listen Elmente das richtige Label zu holen.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:6:"$table";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:15:"$labelFieldName";}}s:7:"content";a:2:{i:0;s:210:"		$labelFieldName = $GLOBALS['TCA'][$table]['ctrl']['label'];

		if ($this->conf['tablelabelfield.'][$table]) {
			$labelFieldName = $this->conf['tablelabelfield.'][$table];
		}

		return $labelFieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:210;s:13:"content_lines";i:9;s:6:"atLine";i:2259;}i:85;a:7:{s:6:"header";s:54:"function getLabel($fieldName, $checkRequired = true) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:186:"

Ermittelt ein bestimmtes Label aufgrund des im TCA gespeicherten Languagestrings, des Datenbankfeldnamens oder gibt einfach den uebergeben Wert wieder aus, wenn nichts gefunden wurde.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:28:"$fieldName / $languageString";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:14:"$checkRequired";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:507:"		if (strpos($fieldName, 'LLL:') === false) {
			// Label aus der Konfiguration holen basierend auf dem Datenbankfeldnamen.
			$label = $this->pi_getLL($fieldName);

			// Das Label zurueckliefern, falls vorhanden.
			if ($label) {
				return $label . (($checkRequired) ? $this->checkIfRequired($fieldName) : '');
			}

			// LanguageString ermitteln.
			$languageString = $t
[...]
gebenen Wert wieder zurueckliefern.
		return $fieldName . (($checkRequired) ? $this->checkIfRequired($fieldName) : '');
	}

	";i:1;i:1;}s:12:"content_size";i:1204;s:13:"content_lines";i:35;s:6:"atLine";i:2276;}i:87;a:7:{s:6:"header";s:49:"function getErrorLabel($fieldName, $valueCheck) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:47:"

Ermittelt das Error Lebel aus dem feldnamen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:317:"		$label = '';

		// Extra Error Label ermitteln.
		if (array_key_exists($fieldName, $valueCheck) && is_string($valueCheck[$fieldName])) {
			$label = '<div class="form_error ' . $fieldName . '_error">' . $this->getLabel($fieldName . '_error_' . $valueCheck[$fieldName], false) . '</div>';
		}

		return $label;
	}

	";i:1;i:0;}s:12:"content_size";i:317;s:13:"content_lines";i:10;s:6:"atLine";i:2319;}i:89;a:7:{s:6:"header";s:29:"function getConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:123:"

Holt Konfigurationen aus der Flexform (Tab-bedingt) und ersetzt diese pro Konfiguration in der TypoScript Konfiguration.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:2:{i:0;s:22:"@global	$this->extConf";i:1;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:2:{i:0;s:15:"$this->extConf ";i:1;s:12:"$this->conf ";}}}s:7:"content";a:2:{i:0;s:507:"		$conf = array();

		// Extension Konfiguration ermitteln.
		$this->extConf = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf'][$this->extKey]);

		// Alle Tabs der Flexformkonfiguration durchgehn.
		foreach ((array)$this->cObj->data['pi_flexform']['data'] as $tabKey => $_) {
			$conf = tx_datamintsfeuser_utils::readFlexformTab($this->cObj->data['pi_flexform'], $t
[...]
input Felder).
		$this->arrRequiredFields[] = '--passwordconfirmation--';
		$this->arrRequiredFields[] = '--captcha--';
	}

	";i:1;i:1;}s:12:"content_size";i:1710;s:13:"content_lines";i:37;s:6:"atLine";i:2337;}i:91;a:4:{s:6:"header";s:33:"function setIrreConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:128:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen oder Flexform Konfigurationen mit den Konfigurationen aus IRRE.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:12:"$this->conf ";}}}s:6:"atLine";i:2381;}i:93;a:7:{s:6:"header";s:41:"function getJSValidationConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:96:"

Gibt die komplette Validierungskonfiguration fuer die JavaScript Frontendvalidierung zurueck.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:14:"$configuration";}}s:7:"content";a:2:{i:0;s:507:"		// Hier eine fertig generierte Konfiguration:
		// datamints_feuser_config[11]=[];
		// datamints_feuser_config[11]["username"]=[];
		// datamints_feuser_config[11]["username"]["validation"]=[];
		// datamints_feuser_config[11]["username"]["validation"]["type"]="username";
		// datamints_feuser_config[11]["username"]["valid"]="Der Benutzername darf keine Leerzeichen bein
[...]
)	{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/pi1/class.tx_datamintsfeuser_pi1.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:5947;s:13:"content_lines";i:103;s:6:"atLine";i:2523;}}s:10:"usageCount";a:47:{s:12:"H_6670368143";a:2:{s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";}s:12:"H_12a661a898";a:2:{s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:32:"function main($content, $conf) {";}s:12:"H_5b95a081d2";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:26;s:5:"TOTAL";i:26;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:26;s:5:"TOTAL";i:26;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:47:"function getConfigByShowtype($subConfig = '') {";}s:12:"H_da0e5daf7b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:21:"function sendForm() {";}s:12:"H_7df7fb86ce";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:23:"function trimPiVars() {";}s:12:"H_e94cbdddc4";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:28:"function uniqueCheckForm() {";}s:12:"H_3fb0fa095c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:25:"function validateForm() {";}s:12:"H_43e13b34ec";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function requireCheckForm() {";}s:12:"H_d5c042e89e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function checkCaptcha($value) {";}s:12:"H_185a7ea1e9";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:67:"function cleanPasswordField($fieldName, $fieldConfig, $arrUpdate) {";}s:12:"H_642b003419";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:67:"function cleanCheckboxField($fieldName, $fieldConfig, $arrUpdate) {";}s:12:"H_d2f65c7437";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:76:"function cleanMultipleSelectboxField($fieldName, $fieldConfig, $arrUpdate) {";}s:12:"H_c5a867d0c9";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:83:"function cleanGroupAndMultipleCheckboxField($fieldName, $fieldConfig, $arrUpdate) {";}s:12:"H_402b34644e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:68:"function cleanUncleanedField($fieldName, $fieldConfig, $arrUpdate) {";}s:12:"H_64135c9dd3";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function copyFields($arrUpdate) {";}s:12:"H_8b791e1590";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function editUser($arrUpdate) {";}s:12:"H_3daa0c5056";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:35:"function registerUser($arrUpdate) {";}s:12:"H_69963a0491";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:36:"function generatePasswordForMail() {";}s:12:"H_03a6558032";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:51:"function saveDeleteImage($fieldName, &$arrUpdate) {";}s:12:"H_5ca8c95dc2";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:7;s:5:"TOTAL";i:7;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:7;s:5:"TOTAL";i:7;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:77:"function showMessageOutputRedirect($mode, $submode = '', $params = array()) {";}s:12:"H_70f1f3874e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function sendActivationMail($userId = 0) {";}s:12:"H_95100fef9a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:30:"function makeApprovalCheck() {";}s:12:"H_fcef8d1a47";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function getApprovalTypes() {";}s:12:"H_006a316cc0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:37:"function isAdminMail($approvalType) {";}s:12:"H_6a64dddd97";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:41:"function setNotActivatedCookie($userId) {";}s:12:"H_9d84f4fc50";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:3;s:15:"_functionHeader";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";}s:12:"H_c1ed18eee0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";}s:12:"H_d44e3c5cd0";a:4:{s:3:"ALL";a:3:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:14:"MD5_8f66ccd171";a:4:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:87:"function getTemplateSubpart($templatePart, $markerArray = array(), $config = array()) {";}s:12:"H_28c1e00aca";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:50:"function getChangedForMail($arrNewData, $config) {";}s:12:"H_14be5b66fd";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function showForm($valueCheck = array()) {";}s:12:"H_bac26dec65";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:43:"function cleanSpecialFieldKey($fieldName) {";}s:12:"H_07e0150ccb";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:57:"function showInput($fieldName, $arrCurrentData, $iItem) {";}s:12:"H_11d491b1ee";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:48:"function showText($fieldName, $arrCurrentData) {";}s:12:"H_021e4f532c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:49:"function showCheck($fieldName, $arrCurrentData) {";}s:12:"H_9f831895a5";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:49:"function showRadio($fieldName, $arrCurrentData) {";}s:12:"H_dde7d2ec74";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:50:"function showSelect($fieldName, $arrCurrentData) {";}s:12:"H_a271bb8626";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:49:"function showGroup($fieldName, $arrCurrentData) {";}s:12:"H_5c70df29ac";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:55:"function showCaptcha($fieldName, $valueCheck, $iItem) {";}s:12:"H_c0ada9d916";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function makeHiddenParamsHiddenFields() {";}s:12:"H_c5d2dcf536";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:34:"function makeHiddenParamsArray() {";}s:12:"H_2d8afb1caa";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:6;s:5:"TOTAL";i:6;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:6;s:5:"TOTAL";i:6;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:38:"function checkIfRequired($fieldName) {";}s:12:"H_72df990b61";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:44:"function getListItemLabelFieldName($table) {";}s:12:"H_e9ee116d9b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:21;s:5:"TOTAL";i:21;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:21;s:5:"TOTAL";i:21;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:54:"function getLabel($fieldName, $checkRequired = true) {";}s:12:"H_8d24a6b0ba";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:49:"function getErrorLabel($fieldName, $valueCheck) {";}s:12:"H_76555fc26a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function getConfiguration() {";}s:12:"H_3a73837f90";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function setIrreConfiguration() {";}s:12:"H_ca61886d00";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function getJSValidationConfiguration() {";}}}}}